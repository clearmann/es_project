definitions:
  es_backend_api_v1.BaseResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  es_backend_api_v1.CreatePostRequest:
    properties:
      content:
        type: string
      tags:
        type: string
      title:
        type: string
      uuid:
        type: integer
    type: object
  es_backend_api_v1.GetProfileResponse:
    properties:
      avatar:
        type: string
      email:
        type: string
      profile:
        type: string
      username:
        type: string
      uuid:
        type: integer
    type: object
  es_backend_api_v1.ListPostRequest:
    properties:
      limit:
        type: integer
      list_all:
        type: boolean
      offset:
        type: integer
      order_by:
        items:
          type: string
        type: array
    type: object
  es_backend_api_v1.ListPostResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/es_backend_internal_model_model_type.Post'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  es_backend_api_v1.ListUserRequest:
    properties:
      limit:
        type: integer
      list_all:
        type: boolean
      offset:
        type: integer
      order_by:
        items:
          type: string
        type: array
    type: object
  es_backend_api_v1.ListUserResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/es_backend_api_v1.UserInfo'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  es_backend_api_v1.LoginRequest:
    properties:
      name:
        type: string
      password:
        type: string
    required:
    - name
    - password
    type: object
  es_backend_api_v1.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  es_backend_api_v1.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  es_backend_api_v1.UpdateProfileRequest:
    properties:
      email:
        type: string
      profile:
        type: string
      username:
        type: string
      uuid:
        type: integer
    type: object
  es_backend_api_v1.UserInfo:
    properties:
      avatar:
        type: string
      email:
        type: string
      profile:
        type: string
      username:
        type: string
      uuid:
        type: integer
    type: object
  es_backend_internal_model_model_type.Post:
    properties:
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      favour_num:
        type: integer
      id:
        type: integer
      tags:
        type: string
      thumb_num:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      uuid:
        type: integer
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: es_backend Example API
  version: 1.0.0
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/es_backend_api_v1.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/es_backend_api_v1.LoginResponse'
      summary: 账号登录
      tags:
      - 用户模块
  /register:
    post:
      consumes:
      - application/json
      description: 目前只支持邮箱注册
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/es_backend_api_v1.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/es_backend_api_v1.BaseResponse'
      summary: 用户注册
      tags:
      - 用户模块
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/es_backend_api_v1.GetProfileResponse'
      security:
      - Bearer: []
      summary: 获取用户信息
      tags:
      - 用户模块
    put:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/es_backend_api_v1.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/es_backend_api_v1.BaseResponse'
      security:
      - Bearer: []
      summary: 修改用户信息
      tags:
      - 用户模块
  /v1/post/create:
    post:
      consumes:
      - application/json
      description: 创建帖子信息
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/es_backend_api_v1.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/es_backend_api_v1.BaseResponse'
      security:
      - Bearer: []
      summary: 创建帖子信息
      tags:
      - 帖子模块
  /v1/post/list:
    post:
      consumes:
      - application/json
      description: 列出帖子信息
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/es_backend_api_v1.ListPostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/es_backend_api_v1.ListPostResponse'
      security:
      - Bearer: []
      summary: 列出帖子信息
      tags:
      - 帖子模块
  /v1/user/list:
    post:
      consumes:
      - application/json
      description: 列出用户信息
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/es_backend_api_v1.ListUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/es_backend_api_v1.ListUserResponse'
      security:
      - Bearer: []
      summary: 列出用户信息
      tags:
      - 用户模块
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
